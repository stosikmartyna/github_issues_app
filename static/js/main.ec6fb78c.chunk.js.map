{"version":3,"sources":["components/SideBar/SideBar.types.ts","App.styles.ts","constants/colors.ts","components/SingleIssue/SingleIssue.styles.ts","components/SingleIssue/SingleIssue.tsx","components/DailyIssues/DailyIssues.styles.ts","components/DailyIssues/DailyIssues.tsx","components/Issues/Issues.styles.ts","components/Issues/Issues.tsx","components/Controls/Controls.styles.ts","components/Controls/Controls.tsx","components/SideBarTab/SideBarTab.styles.ts","components/SideBarTab/SideBarTab.tsx","components/SideBar/SideBar.styles.ts","components/SideBar/SideBar.tsx","components/MainContainer/MainContainer.styles.ts","components/MainContainer/MainContainer.tsx","App.tsx","index.tsx"],"names":["Tab","Container","styled","div","colors","Wrapper","Text","span","Icon","img","SingleIssue","issue","useState","isClicked","setIsClicked","iconSrc","onClick","src","Date","DailyIssues","date","issues","map","index","Issues","CloseButton","MinimizeButton","MaximizeButton","Controls","Box","isActive","IssuesQuantity","SideBarTab","icon","name","quantity","TabsWrapper","SideBar","ALL","activeTab","setActiveTab","handleTabs","tab","OPEN","CLOSED","MainContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec6fb78c.chunk.js","sourcesContent":["export enum Tab {\r\n    ALL = 'All',\r\n    OPEN = 'Open',\r\n    CLOSED = 'Closed',\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  align-items: center;\r\n  background-image: url('./images/background.jpg');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;","export const colors = {\r\n    backgroundIssueGrey: '#F6F6F6',\r\n    borderGrey: '#E0E0E0',\r\n    dateGrey: '#8A8995',\r\n    textGrey: '#080606',\r\n    navyBlue: '#101022',\r\n    activeBlue: '#292A48',\r\n    activeBlueHover: '#1c1d35',\r\n    red: '#FF594F',\r\n    yellow: '#FFBC1B',\r\n    green: '#00CD46',\r\n    white: '#FFFFFF',\r\n}","import styled from 'styled-components';\r\nimport { colors } from '../../constants/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n    align-items: center;\r\n    background-color: ${colors.white};\r\n    border: 1px solid ${colors.borderGrey};\r\n    border-radius: 7px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 5px 0;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n    color: ${colors.textGrey};\r\n    font-size: 15px;\r\n    letter-spacing: .5px;\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    cursor: pointer;\r\n    filter: none;\r\n    transition: filter .3s ease-in-out;\r\n\r\n    :hover {\r\n        filter: drop-shadow(0 0 0.2rem #e0e0e0);\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport { Wrapper, Text, Icon } from './SingleIssue.styles';\r\n\r\ninterface SingleIssueProps {\r\n    issue: string;\r\n}\r\n\r\nexport const SingleIssue: React.FC<SingleIssueProps> = ({ issue }) => {\r\n    const [isClicked, setIsClicked] = useState<boolean>(false);\r\n\r\n    const handleClick = () => {\r\n        setIsClicked(!isClicked);\r\n    };\r\n\r\n    const iconSrc = `./images/${isClicked ? 'checked' : 'unchecked'}-star.svg`;\r\n\r\n    return (\r\n        <Wrapper onClick={handleClick}>\r\n            <Text>{issue}</Text>\r\n            <Icon src={iconSrc} />\r\n        </Wrapper>\r\n    );\r\n};","import styled from 'styled-components';\r\nimport { colors } from '../../constants/colors';\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Date = styled.span`\r\n    color: ${colors.dateGrey};\r\n    font-size: 12px;\r\n    letter-spacing: .5px;\r\n`;","import React from 'react';\r\nimport { SingleIssue } from '../SingleIssue/SingleIssue';\r\nimport { Container, Date } from './DailyIssues.styles';\r\n\r\ninterface DailyIssuesProps {\r\n    date: string;\r\n    issues: string[];\r\n};\r\n\r\nexport const DailyIssues: React.FC<DailyIssuesProps> = ({ date, issues }) => {\r\n    return (\r\n        <Container>\r\n            <Date>{date}</Date>\r\n            {issues.map((issue: string, index: number) => {\r\n                return (\r\n                    <SingleIssue key={index} issue={issue} />\r\n                )\r\n            })}\r\n        </Container>\r\n    );\r\n};","import styled from 'styled-components';\r\nimport { colors } from '../../constants/colors';\r\n\r\nexport const Container = styled.div`\r\n    background-color: ${colors.backgroundIssueGrey};\r\n    border-top-right-radius: 7px;\r\n    border-bottom-right-radius: 7px;\r\n    height: 480px;\r\n    overflow: auto;\r\n    padding: 10px 10px;\r\n    width: 100%;\r\n\r\n    &::-webkit-scrollbar {\r\n        border-radius: 20px;\r\n        width: 7px;\r\n    }\r\n    \r\n    &::-webkit-scrollbar-thumb {\r\n        background-color: ${colors.borderGrey};\r\n        border-right: none;\r\n        border-left: none;\r\n        border-radius: 20px;   \r\n    }\r\n`;","import React from 'react';\r\nimport { DailyIssues } from '../DailyIssues/DailyIssues';\r\nimport { Container } from './Issues.styles';\r\n\r\nexport const Issues: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <DailyIssues date={'19-07-2016'} issues={['Page Changes', 'Review of last issues']} />\r\n            <DailyIssues date={'18-07-2016'} issues={['Visual UI update review', 'Sidebar changes']} />\r\n            <DailyIssues date={'17-07-2016'} issues={['Crash update', 'Page visual UI update', 'Sidebar update']} />\r\n            <DailyIssues date={'19-07-2016'} issues={['Page Changes', 'Review of last issues']} />\r\n            <DailyIssues date={'18-07-2016'} issues={['Visual UI update review', 'Sidebar changes']} />\r\n        </Container>\r\n    );\r\n};","import styled from 'styled-components';\r\nimport { colors } from '../../constants/colors';\r\n\r\nexport const Container = styled.div`\r\n    align-items: center;\r\n    background-color: ${colors.navyBlue};\r\n    border-top-left-radius: 7px;\r\n    display: flex;\r\n    height: 40px;\r\n`;\r\n\r\nexport const CloseButton = styled.div`\r\n    background-color: ${colors.red};\r\n    border-radius: 50%;\r\n    height: 10px;\r\n    margin-left: 10px;\r\n    width: 10px;\r\n`;\r\n\r\nexport const MinimizeButton = styled(CloseButton)`\r\n    background-color: ${colors.yellow};\r\n`;\r\n\r\nexport const MaximizeButton = styled(CloseButton)`\r\n    background-color: ${colors.green};\r\n`;","import React from 'react';\r\nimport { \r\n    Container, \r\n    CloseButton,\r\n    MinimizeButton,\r\n    MaximizeButton, \r\n} from './Controls.styles';\r\n\r\nexport const Controls: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <CloseButton />\r\n            <MinimizeButton />\r\n            <MaximizeButton />\r\n        </Container>\r\n    );\r\n};","import styled from 'styled-components';\r\nimport { colors } from '../../constants/colors';\r\n\r\ninterface BoxProps {\r\n    isActive: boolean;\r\n}\r\n\r\nexport const Box = styled.div<BoxProps>`\r\n    align-items: center;\r\n    background-color: ${({isActive}) => isActive && `${colors.activeBlue}`};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 50px;\r\n    padding: 0 10px;\r\n    transition: background-color .3s ease-in-out;\r\n\r\n    :hover {\r\n        background-color: ${({isActive}) => isActive ? `${colors.activeBlueHover}` : `${colors.navyBlue}`}\r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    margin-right: 10px;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n    font-size: 14px;\r\n`;\r\n\r\nexport const IssuesQuantity = styled(Text)``;","import React from 'react';\r\nimport { Tab } from '../SideBar/SideBar.types';\r\nimport {\r\n    Box,\r\n    Wrapper,\r\n    Icon,\r\n    Text,\r\n    IssuesQuantity,\r\n} from './SideBarTab.styles';\r\n\r\ninterface SideBarTabProps {\r\n    icon: string;\r\n    name: Tab;\r\n    quantity: number;\r\n    onClick: (tab: Tab) => void;\r\n    isActive: boolean;\r\n};\r\n\r\nexport const SideBarTab: React.FC<SideBarTabProps> = ({ icon, name, quantity, onClick, isActive }) => {\r\n\r\n    const handleClick = () => {\r\n        onClick(name);\r\n    };\r\n\r\n    return (\r\n        <Box isActive={isActive} onClick={handleClick}>\r\n            <Wrapper>\r\n                <Icon src={icon} />\r\n                <Text>{name}</Text>\r\n            </Wrapper>\r\n            <IssuesQuantity>{quantity}</IssuesQuantity>\r\n        </Box>\r\n    );\r\n};","import styled from 'styled-components';\r\nimport { colors } from '../../constants/colors';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 150px;\r\n`;\r\n\r\nexport const TabsWrapper = styled.div`\r\n    border-bottom-left-radius: 7px;\r\n    color: ${colors.white};\r\n    background-color: rgb(16, 16, 34, 0.9);\r\n    backdrop-filter: blur(6px);\r\n    height: 100%;\r\n`;","import React, { useState } from 'react';\r\nimport { Controls } from '../Controls/Controls';\r\nimport { SideBarTab } from '../SideBarTab/SideBarTab';\r\nimport { Tab } from './SideBar.types';\r\nimport { Container, TabsWrapper } from './SideBar.styles';\r\n\r\nexport const SideBar: React.FC = () => {\r\n    const [activeTab, setActiveTab] = useState<Tab>(Tab.ALL);\r\n\r\n    const handleTabs = (tab: Tab) => {\r\n        setActiveTab(tab)\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Controls />\r\n            <TabsWrapper>\r\n                <SideBarTab \r\n                    icon={'./images/icon-github.svg'} \r\n                    name={Tab.ALL} \r\n                    quantity={12} \r\n                    onClick={handleTabs} \r\n                    isActive={activeTab === Tab.ALL} \r\n                />\r\n                <SideBarTab \r\n                    icon={'./images/icon-open-issue.svg'} \r\n                    name={Tab.OPEN} \r\n                    quantity={4} \r\n                    onClick={handleTabs} \r\n                    isActive={activeTab === Tab.OPEN} \r\n                />\r\n                <SideBarTab \r\n                    icon={'./images/icon-closed-issue.svg'} \r\n                    name={Tab.CLOSED} \r\n                    quantity={8} \r\n                    onClick={handleTabs} \r\n                    isActive={activeTab === Tab.CLOSED} \r\n                />\r\n            </TabsWrapper>\r\n        </Container>\r\n    );\r\n};","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    border-top-right-radius: 7px;\r\n    box-shadow: 0px 0px 23px 0px rgba(66, 68, 90, 1);\r\n    display: flex;\r\n    height: 500px;\r\n    width: 650px;\r\n`;","import React from 'react';\r\nimport { Issues } from '../Issues/Issues';\r\nimport { SideBar } from '../SideBar/SideBar';\r\nimport { Container } from './MainContainer.styles';\r\n\r\nexport const MainContainer: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <SideBar />\r\n            <Issues />\r\n        </Container>\r\n    );\r\n};","import React from 'react';\nimport { Container } from './App.styles';\nimport { MainContainer } from './components/MainContainer/MainContainer';\n\nexport const App: React.FC = () => {\n  return (\n    <Container>\n      <MainContainer />\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}